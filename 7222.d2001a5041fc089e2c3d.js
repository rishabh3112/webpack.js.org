(self.webpackChunk=self.webpackChunk||[]).push([[7222],{7222:function(a,t,e){"use strict";e.r(t);var s=e(1370),n=e.n(s),o=new URL(e(2772),e.b),d='<h1 id="webpack">webpack<a href="#webpack" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h1> <h2 id="write-your-code">Write Your Code<a href="#write-your-code" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <div class="splash__wrap"> <div class="splash__left"> <p><strong>src/index.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">import</span> bar <span class="token keyword">from</span> <span class="token string">\'./bar.js\'</span><span class="token punctuation">;</span>\n\n<span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> </div> <div class="splash__right"> <p><strong>src/bar.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">//</span>\n<span class="token punctuation">}</span></code></pre> </div> </div> <h2 id="bundle-it">Bundle It<a href="#bundle-it" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <div class="splash__wrap"> <div class="splash__left"> <p><strong><a href="https://youtu.be/3Nv9muOkb6k?t=21293">Without config</a></strong> or provide custom <strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'path\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  entry<span class="token operator">:</span> <span class="token string">\'./src/index.js\'</span><span class="token punctuation">,</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">\'dist\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    filename<span class="token operator">:</span> <span class="token string">\'bundle.js\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> </div> <div class="splash__right"> <p><strong>page.html</strong></p> <pre><code class="hljs language-html"><span class="token doctype"><span class="token punctuation">&#x3C;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>html</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>head</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    ...\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>head</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>body</span><span class="token punctuation">></span></span>\n    ...\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dist/bundle.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>script</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>body</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>html</span><span class="token punctuation">></span></span></code></pre> </div> </div> <p>Then run <code>webpack</code> on the command-line to create <code>bundle.js</code>.</p> <h2 id="awesome-isnt-it-lets-dive-in">Awesome isn\'t it? Let\'s dive in!<a href="#awesome-isnt-it-lets-dive-in" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p><strong><a href="/guides/getting-started">Get Started</a></strong> quickly in our <strong>Guides</strong> section, or dig into the <strong><a href="/concepts">Concepts</a></strong> section for more high-level information on the core notions behind webpack.</p> <h1 id="comparison">Comparison<a href="#comparison" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h1> <p>webpack is not the only module bundler out there. If you are choosing between using webpack or any of the bundlers below, here is a feature-by-feature comparison on how webpack fares against the current competition.</p> <table> <thead> <tr> <th>Feature</th> <th>webpack/webpack</th> <th>jrburke/requirejs</th> <th>substack/node-browserify</th> <th>jspm/jspm-cli</th> <th>rollup/rollup</th> <th>brunch/brunch</th> </tr> </thead> <tbody> <tr> <td data-th="Feature"><span>Additional chunks are loaded on demand</span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span><strong>yes</strong></span></td> <td data-th="substack/node-browserify"><span>no</span></td> <td data-th="jspm/jspm-cli"><span><a href="https://github.com/systemjs/systemjs/blob/master/docs/system-api.md#systemimportmodulename--normalizedparentname---promisemodule">System.import</a></span></td> <td data-th="rollup/rollup"><span>no</span></td> <td data-th="brunch/brunch"><span>no</span></td> </tr> <tr> <td data-th="Feature"><span>AMD <code>define</code></span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span><strong>yes</strong></span></td> <td data-th="substack/node-browserify"><span><a href="https://github.com/jaredhanson/deamdify">deamdify</a></span></td> <td data-th="jspm/jspm-cli"><span>yes</span></td> <td data-th="rollup/rollup"><span><a href="https://github.com/piuccio/rollup-plugin-amd">rollup-plugin-amd</a></span></td> <td data-th="brunch/brunch"><span>yes</span></td> </tr> <tr> <td data-th="Feature"><span>AMD <code>require</code></span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span><strong>yes</strong></span></td> <td data-th="substack/node-browserify"><span>no</span></td> <td data-th="jspm/jspm-cli"><span>yes</span></td> <td data-th="rollup/rollup"><span>no</span></td> <td data-th="brunch/brunch"><span>yes</span></td> </tr> <tr> <td data-th="Feature"><span>AMD <code>require</code> loads on demand</span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span>with manual configuration</span></td> <td data-th="substack/node-browserify"><span>no</span></td> <td data-th="jspm/jspm-cli"><span>yes</span></td> <td data-th="rollup/rollup"><span>no</span></td> <td data-th="brunch/brunch"><span>no</span></td> </tr> <tr> <td data-th="Feature"><span>CommonJS <code>exports</code></span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span>only wrapping in <code>define</code></span></td> <td data-th="substack/node-browserify"><span><strong>yes</strong></span></td> <td data-th="jspm/jspm-cli"><span>yes</span></td> <td data-th="rollup/rollup"><span><a href="https://github.com/rollup/rollup-plugin-commonjs">commonjs-plugin</a></span></td> <td data-th="brunch/brunch"><span>yes</span></td> </tr> <tr> <td data-th="Feature"><span>CommonJS <code>require</code></span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span>only wrapping in <code>define</code></span></td> <td data-th="substack/node-browserify"><span><strong>yes</strong></span></td> <td data-th="jspm/jspm-cli"><span>yes</span></td> <td data-th="rollup/rollup"><span><a href="https://github.com/rollup/rollup-plugin-commonjs">commonjs-plugin</a></span></td> <td data-th="brunch/brunch"><span>yes</span></td> </tr> <tr> <td data-th="Feature"><span>CommonJS <code>require.resolve</code></span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span>no</span></td> <td data-th="substack/node-browserify"><span>no</span></td> <td data-th="jspm/jspm-cli"><span>no</span></td> <td data-th="rollup/rollup"><span>no</span></td> <td data-th="brunch/brunch"><span>-</span></td> </tr> <tr> <td data-th="Feature"><span>Concat in require <code>require("./fi" + "le")</code></span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span>no♦</span></td> <td data-th="substack/node-browserify"><span>no</span></td> <td data-th="jspm/jspm-cli"><span>no</span></td> <td data-th="rollup/rollup"><span>no</span></td> <td data-th="brunch/brunch"><span>-</span></td> </tr> <tr> <td data-th="Feature"><span>Debugging support</span></td> <td data-th="webpack/webpack"><span><strong>SourceUrl, SourceMaps</strong></span></td> <td data-th="jrburke/requirejs"><span>not required</span></td> <td data-th="substack/node-browserify"><span>SourceMaps</span></td> <td data-th="jspm/jspm-cli"><span><strong>SourceUrl, SourceMaps</strong></span></td> <td data-th="rollup/rollup"><span><strong>SourceUrl, SourceMaps</strong></span></td> <td data-th="brunch/brunch"><span>SourceMaps</span></td> </tr> <tr> <td data-th="Feature"><span>Dependencies</span></td> <td data-th="webpack/webpack"><span>19MB / 127 packages</span></td> <td data-th="jrburke/requirejs"><span>11MB / 118 packages</span></td> <td data-th="substack/node-browserify"><span><strong>1.2MB / 1 package</strong></span></td> <td data-th="jspm/jspm-cli"><span>26MB / 131 packages</span></td> <td data-th="rollup/rollup"><span>?MB / 3 packages</span></td> <td data-th="brunch/brunch"><span>-</span></td> </tr> <tr> <td data-th="Feature"><span>ES2015 <code>import</code>/<code>export</code></span></td> <td data-th="webpack/webpack"><span><strong>yes</strong> (webpack 2)</span></td> <td data-th="jrburke/requirejs"><span>no</span></td> <td data-th="substack/node-browserify"><span>no</span></td> <td data-th="jspm/jspm-cli"><span><strong>yes</strong></span></td> <td data-th="rollup/rollup"><span><strong>yes</strong></span></td> <td data-th="brunch/brunch"><span>yes, via <a href="https://github.com/gcollazo/es6-module-transpiler-brunch">es6 module transpiler</a></span></td> </tr> <tr> <td data-th="Feature"><span>Expressions in require (guided) <code>require("./templates/" + template)</code></span></td> <td data-th="webpack/webpack"><span><strong>yes (all files matching included)</strong></span></td> <td data-th="jrburke/requirejs"><span>no♦</span></td> <td data-th="substack/node-browserify"><span>no</span></td> <td data-th="jspm/jspm-cli"><span>no</span></td> <td data-th="rollup/rollup"><span>no</span></td> <td data-th="brunch/brunch"><span>no</span></td> </tr> <tr> <td data-th="Feature"><span>Expressions in require (free) <code>require(moduleName)</code></span></td> <td data-th="webpack/webpack"><span>with manual configuration</span></td> <td data-th="jrburke/requirejs"><span>no♦</span></td> <td data-th="substack/node-browserify"><span>no</span></td> <td data-th="jspm/jspm-cli"><span>no</span></td> <td data-th="rollup/rollup"><span>no</span></td> <td data-th="brunch/brunch"><span>-</span></td> </tr> <tr> <td data-th="Feature"><span>Generate a single bundle</span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span>yes♦</span></td> <td data-th="substack/node-browserify"><span>yes</span></td> <td data-th="jspm/jspm-cli"><span>yes</span></td> <td data-th="rollup/rollup"><span>yes</span></td> <td data-th="brunch/brunch"><span>yes</span></td> </tr> <tr> <td data-th="Feature"><span>Indirect require <code>var r = require; r("./file")</code></span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span>no♦</span></td> <td data-th="substack/node-browserify"><span>no</span></td> <td data-th="jspm/jspm-cli"><span>no</span></td> <td data-th="rollup/rollup"><span>no</span></td> <td data-th="brunch/brunch"><span>-</span></td> </tr> <tr> <td data-th="Feature"><span>Load each file separate</span></td> <td data-th="webpack/webpack"><span>no</span></td> <td data-th="jrburke/requirejs"><span>yes</span></td> <td data-th="substack/node-browserify"><span>no</span></td> <td data-th="jspm/jspm-cli"><span>yes</span></td> <td data-th="rollup/rollup"><span>no</span></td> <td data-th="brunch/brunch"><span>no</span></td> </tr> <tr> <td data-th="Feature"><span>Mangle path names</span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span>no</span></td> <td data-th="substack/node-browserify"><span>partial</span></td> <td data-th="jspm/jspm-cli"><span>yes</span></td> <td data-th="rollup/rollup"><span>not required (path names are not included in the bundle)</span></td> <td data-th="brunch/brunch"><span>no</span></td> </tr> <tr> <td data-th="Feature"><span>Minimizing</span></td> <td data-th="webpack/webpack"><span><a href="https://github.com/fabiosantoscode/terser">Terser</a></span></td> <td data-th="jrburke/requirejs"><span>uglify, closure compiler</span></td> <td data-th="substack/node-browserify"><span><a href="https://github.com/hughsk/uglifyify">uglifyify</a></span></td> <td data-th="jspm/jspm-cli"><span>yes</span></td> <td data-th="rollup/rollup"><span><a href="https://github.com/TrySound/rollup-plugin-uglify">uglify-plugin</a></span></td> <td data-th="brunch/brunch"><span><a href="https://github.com/brunch/uglify-js-brunch">UglifyJS-brunch</a></span></td> </tr> <tr> <td data-th="Feature"><span>Multi pages build with common bundle</span></td> <td data-th="webpack/webpack"><span>with manual configuration</span></td> <td data-th="jrburke/requirejs"><span><strong>yes</strong></span></td> <td data-th="substack/node-browserify"><span>with manual configuration</span></td> <td data-th="jspm/jspm-cli"><span>with bundle arithmetic</span></td> <td data-th="rollup/rollup"><span>no</span></td> <td data-th="brunch/brunch"><span>no</span></td> </tr> <tr> <td data-th="Feature"><span>Multiple bundles</span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span>with manual configuration</span></td> <td data-th="substack/node-browserify"><span>with manual configuration</span></td> <td data-th="jspm/jspm-cli"><span>yes</span></td> <td data-th="rollup/rollup"><span>no</span></td> <td data-th="brunch/brunch"><span>yes</span></td> </tr> <tr> <td data-th="Feature"><span>Node.js built-in libs <code>require("path")</code></span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span>no</span></td> <td data-th="substack/node-browserify"><span><strong>yes</strong></span></td> <td data-th="jspm/jspm-cli"><span><strong>yes</strong></span></td> <td data-th="rollup/rollup"><span><a href="https://github.com/rollup/rollup-plugin-node-resolve">node-resolve-plugin</a></span></td> <td data-th="brunch/brunch"><span>-</span></td> </tr> <tr> <td data-th="Feature"><span>Other Node.js stuff</span></td> <td data-th="webpack/webpack"><span>process, __dir/filename, global</span></td> <td data-th="jrburke/requirejs"><span>-</span></td> <td data-th="substack/node-browserify"><span>process, __dir/filename, global</span></td> <td data-th="jspm/jspm-cli"><span>process, __dir/filename, global for cjs</span></td> <td data-th="rollup/rollup"><span>global (<a href="https://github.com/rollup/rollup-plugin-commonjs">commonjs-plugin</a>)</span></td> <td data-th="brunch/brunch"><span>-</span></td> </tr> <tr> <td data-th="Feature"><span>Plugins</span></td> <td data-th="webpack/webpack"><span><strong>yes</strong></span></td> <td data-th="jrburke/requirejs"><span>yes</span></td> <td data-th="substack/node-browserify"><span><strong>yes</strong></span></td> <td data-th="jspm/jspm-cli"><span>yes</span></td> <td data-th="rollup/rollup"><span>yes</span></td> <td data-th="brunch/brunch"><span>yes</span></td> </tr> <tr> <td data-th="Feature"><span>Preprocessing</span></td> <td data-th="webpack/webpack"><span><strong>loaders</strong></span></td> <td data-th="jrburke/requirejs"><span>loaders</span></td> <td data-th="substack/node-browserify"><span>transforms</span></td> <td data-th="jspm/jspm-cli"><span>plugin translate</span></td> <td data-th="rollup/rollup"><span>plugin transforms</span></td> <td data-th="brunch/brunch"><span>compilers, optimizers</span></td> </tr> <tr> <td data-th="Feature"><span>Replacement for browser</span></td> <td data-th="webpack/webpack"><span><code>web_modules</code>, <code>.web.js</code>, package.json field, alias configuration option</span></td> <td data-th="jrburke/requirejs"><span>alias option</span></td> <td data-th="substack/node-browserify"><span>package.json field, alias option</span></td> <td data-th="jspm/jspm-cli"><span>package.json, alias option</span></td> <td data-th="rollup/rollup"><span>no</span></td> <td data-th="brunch/brunch"><span>-</span></td> </tr> <tr> <td data-th="Feature"><span>Requirable files</span></td> <td data-th="webpack/webpack"><span>file system</span></td> <td data-th="jrburke/requirejs"><span><strong>web</strong></span></td> <td data-th="substack/node-browserify"><span>file system</span></td> <td data-th="jspm/jspm-cli"><span>through plugins</span></td> <td data-th="rollup/rollup"><span>file system or through plugins</span></td> <td data-th="brunch/brunch"><span>file system</span></td> </tr> <tr> <td data-th="Feature"><span>Runtime overhead</span></td> <td data-th="webpack/webpack"><span><strong>243B + 20B per module + 4B per dependency</strong></span></td> <td data-th="jrburke/requirejs"><span>14.7kB + 0B per module + (3B + X) per dependency</span></td> <td data-th="substack/node-browserify"><span>415B + 25B per module + (6B + 2X) per dependency</span></td> <td data-th="jspm/jspm-cli"><span>5.5kB for self-executing bundles, 38kB for full loader and polyfill, 0 plain modules, 293B CJS, 139B ES2015 System.register before gzip</span></td> <td data-th="rollup/rollup"><span><strong>none for ES2015 modules</strong> (other formats may have)</span></td> <td data-th="brunch/brunch"><span>-</span></td> </tr> <tr> <td data-th="Feature"><span>Watch mode</span></td> <td data-th="webpack/webpack"><span>yes</span></td> <td data-th="jrburke/requirejs"><span>not required</span></td> <td data-th="substack/node-browserify"><span><a href="https://github.com/browserify/watchify">watchify</a></span></td> <td data-th="jspm/jspm-cli"><span>not needed in dev</span></td> <td data-th="rollup/rollup"><span><a href="https://github.com/rollup/rollup-watch">rollup-watch</a></span></td> <td data-th="brunch/brunch"><span>yes</span></td> </tr> </tbody> </table> <p>♦ in production mode (opposite in development mode)</p> <p>X is the length of the path string</p> <h2 id="bundling-vs-loading">Bundling vs. Loading<a href="#bundling-vs-loading" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>It\'s important to note some key differences between <em>loading</em> and <em>bundling</em> modules. A tool like <a href="https://github.com/systemjs/systemjs">SystemJS</a>, which can be found under the hood of <a href="https://github.com/jspm/jspm-cli">JSPM</a>, is used to load and transpile modules at runtime in the browser. This differs significantly from webpack, where modules are transpiled (through "loaders") and bundled before hitting the browser.</p> <p>Each method has its advantages and disadvantages. Loading and transpiling modules at runtime can add a lot of overhead for larger sites and applications comprised of many modules. For this reason, SystemJS makes more sense for smaller projects where fewer modules are required. However, this may change a bit as <a href="https://http2.github.io/">HTTP/2</a> will improve the speed at which files can be transferred from server to client. Note that HTTP/2 doesn\'t change anything about <em>transpiling</em> modules, which will always take longer when done client-side.</p> <h1 id="branding-guidelines">Branding Guidelines<a href="#branding-guidelines" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h1> <p>Here you can find <strong>webpack</strong> project brand guidelines, assets, and license. See our official <a href="https://github.com/webpack/media">media repository</a> for more information and to find the <a href="https://github.com/webpack/media/blob/master/LICENSE">license</a> that governs this work. Click any of the images to download them.</p> <h2 id="the-name">The Name<a href="#the-name" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>webpack should <strong>always</strong> be written in lower-case letters, even at the beginning of a sentence.</p> <h2 id="logo">Logo<a href="#logo" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>The webpack logo should be placed on a white background with enough space around it like this:</p> <img src="https://raw.githubusercontent.com/webpack/media/master/logo/logo-on-white-bg.png" alt="webpack logo default with proper spacing on light background"/> <p><a href="https://github.com/webpack/media/blob/master/logo/logo-on-white-bg.svg">svg</a> | <a href="https://github.com/webpack/media/blob/master/logo/logo-on-white-bg.png">png</a> | <a href="https://github.com/webpack/media/blob/master/logo/logo-on-white-bg.jpg">jpg</a></p> <p>Just double the size of the inner dark blue cube to get an idea how much space the logo should have.</p> <p>For dark backgrounds, you can use the negative version of the logo:</p> <div style="display:block;background:#111"> <img src="https://raw.githubusercontent.com/webpack/media/master/logo/logo-on-dark-bg.png" alt="webpack logo default with proper spacing on light background"/> </div> <p><a href="https://github.com/webpack/media/blob/master/logo/logo-on-dark-bg.svg">svg</a> | <a href="https://github.com/webpack/media/blob/master/logo/logo-on-dark-bg.png">png</a> | <a href="https://github.com/webpack/media/blob/master/logo/logo-on-dark-bg.jpg">jpg</a></p> <aside class="tip"><h6 class="tip__prefix">tip</h6><p>Please use the <strong>icon + text</strong> whenever possible.</p></aside> <h2 id="icon-only">Icon only<a href="#icon-only" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p><strong>The icon is designed to be used in layout-constrained areas. As previously stated, please prefer icon + text.</strong></p> <img src="https://raw.githubusercontent.com/webpack/media/master/logo/icon.png" width="250" alt="icon example"> <p><a href="https://github.com/webpack/media/blob/master/logo/icon.svg">svg</a> | <a href="https://github.com/webpack/media/blob/master/logo/icon.png">png</a> | <a href="https://github.com/webpack/media/blob/master/logo/icon.jpg">jpg</a></p> <p>Square-sized icon for bigger areas (like avatars or profile pictures):</p> <img src="https://raw.githubusercontent.com/webpack/media/master/logo/icon-square-big.png" width="250" alt="icon square big example"> <p><a href="https://github.com/webpack/media/blob/master/logo/icon-square-big.svg">svg</a> | <a href="https://github.com/webpack/media/blob/master/logo/icon-square-big.png">png</a> | <a href="https://github.com/webpack/media/blob/master/logo/icon-square-big.jpg">jpg</a></p> <p>Square-sized icon for smaller areas (like favicons):</p> <img src="https://raw.githubusercontent.com/webpack/media/master/logo/icon-square-small.png" width="50" alt="icon square small example"> <p><a href="https://github.com/webpack/media/blob/master/logo/icon-square-small.svg">svg</a> | <a href="https://github.com/webpack/media/blob/master/logo/icon-square-small.png">png</a> | <a href="https://github.com/webpack/media/blob/master/logo/icon-square-small.jpg">jpg</a></p> <aside class="tip"><h6 class="tip__prefix">tip</h6><p>For those of you following our guidelines and have gotten this far, we\'ve made a special smaller size image used especially for custom emoji (like in a slack or gitter channel ;))</p></aside> <img src="'+n()(o)+'" width="50" alt="icon square small example"> <h2 id="font">Font<a href="#font" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>We use the beautiful <a href="http://atipofoundry.com/fonts/geomanist">Geomanist Medium</a> font from the extremely talented folks at the <a href="http://atipofoundry.com/">Atipo Foundry</a> who provide the entire font family at a \'pay what you want\' model.</p> <h2 id="color-palette">Color Palette<a href="#color-palette" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>The following colors are used throughout the site in various combinations and on our fancy clothing line launched with the help of <a href="https://opencollective.com/">Open Collective</a> and <a href="https://medium.com/u/840563ee2a56">Threadless</a> over at the <a href="https://webpack.threadless.com/collections/the-final-release-collection/">official webpack store</a>!</p> <table> <thead> <tr> <th>Color Name</th> <th>HEX Code</th> <th>RGB Code</th> <th>Sample</th> </tr> </thead> <tbody> <tr> <td data-th="Color Name"><span>Malibu:</span></td> <td data-th="HEX Code"><span>HEX <code>#8dd6f9</code></span></td> <td data-th="RGB Code"><span><code>rgb: 141, 214, 249</code></span></td> <td data-th="Sample"><span><div style="background-color:#8dd6f9"> </div></span></td> </tr> <tr> <td data-th="Color Name"><span>Denim:</span></td> <td data-th="HEX Code"><span>HEX <code>#1d78c1</code></span></td> <td data-th="RGB Code"><span><code>rgb: 29, 120, 193</code></span></td> <td data-th="Sample"><span><div style="background-color:#1d78c1"> </div></span></td> </tr> <tr> <td data-th="Color Name"><span>Fiord:</span></td> <td data-th="HEX Code"><span>HEX <code>#465E69</code></span></td> <td data-th="RGB Code"><span><code>rgb: 70, 94, 105</code></span></td> <td data-th="Sample"><span><div style="background-color:#465e69"> </div></span></td> </tr> <tr> <td data-th="Color Name"><span>Outer Space:</span></td> <td data-th="HEX Code"><span>HEX <code>#2B3A42</code></span></td> <td data-th="RGB Code"><span><code>rgb: 43, 58, 66</code></span></td> <td data-th="Sample"><span><div style="background-color:#2b3a42"> </div></span></td> </tr> <tr> <td data-th="Color Name"><span>White:</span></td> <td data-th="HEX Code"><span>HEX <code>#ffffff</code></span></td> <td data-th="RGB Code"><span><code>rgb: 255, 255, 255</code></span></td> <td data-th="Sample"><span><div style="background-color:#fff"> </div></span></td> </tr> <tr> <td data-th="Color Name"><span>Concrete:</span></td> <td data-th="HEX Code"><span>HEX <code>#f2f2f2</code></span></td> <td data-th="RGB Code"><span><code>rgb: 242, 242, 242</code></span></td> <td data-th="Sample"><span><div style="background-color:#f2f2f2"> </div></span></td> </tr> <tr> <td data-th="Color Name"><span>Alto:</span></td> <td data-th="HEX Code"><span>HEX <code>#dedede</code></span></td> <td data-th="RGB Code"><span><code>rgb: 222, 222, 222</code></span></td> <td data-th="Sample"><span><div style="background-color:#dedede"> </div></span></td> </tr> <tr> <td data-th="Color Name"><span>Dusty Gray:</span></td> <td data-th="HEX Code"><span>HEX <code>#999999</code></span></td> <td data-th="RGB Code"><span><code>rgb: 153, 153, 153</code></span></td> <td data-th="Sample"><span><div style="background-color:#999"> </div></span></td> </tr> <tr> <td data-th="Color Name"><span>Dove Gray:</span></td> <td data-th="HEX Code"><span>HEX <code>#666666</code></span></td> <td data-th="RGB Code"><span><code>rgb: 102, 102, 102</code></span></td> <td data-th="Sample"><span><div style="background-color:#666"> </div></span></td> </tr> <tr> <td data-th="Color Name"><span>Emperor:</span></td> <td data-th="HEX Code"><span>HEX <code>#535353</code></span></td> <td data-th="RGB Code"><span><code>rgb: 83, 83, 83</code></span></td> <td data-th="Sample"><span><div style="background-color:#535353"> </div></span></td> </tr> <tr> <td data-th="Color Name"><span>Mine Shaft:</span></td> <td data-th="HEX Code"><span>HEX <code>#333333</code></span></td> <td data-th="RGB Code"><span><code>rgb: 51, 51, 51</code></span></td> <td data-th="Sample"><span><div style="background-color:#333"> </div></span></td> </tr> </tbody> </table> <p>In addition, you can grab the following file types directly from these links:</p> <p><a href="https://raw.githubusercontent.com/webpack/media/master/design/webpack-palette.psd">psd</a> | <a href="https://raw.githubusercontent.com/webpack/media/master/design/webpack-palette.png">png</a> | <a href="https://raw.githubusercontent.com/webpack/media/master/design/webpack-palette.ai">ai</a> | <a href="https://raw.githubusercontent.com/webpack/media/master/design/webpack-palette.svg">svg</a></p> <h2 id="license">License<a href="#license" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>The logo and the brand name are <strong>not MIT licensed</strong>. Please check <a href="https://github.com/webpack/media/blob/master/LICENSE">our LICENSE</a> for usage guidelines.</p> <h1 id="glossary">Glossary<a href="#glossary" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h1> <p>This index lists common terms used throughout the webpack ecosystem.</p> <h2 id="a">A<a href="#a" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <ul> <li><a href="/guides/asset-management/"><strong>Asset</strong></a>: This is a general term for the images, fonts, media, and any other kind of files that are typically used in websites and other applications. These typically end up as individual files within the <a href="/glossary/#o">output</a> but can also be inlined via things like the <a href="/loaders/style-loader">style-loader</a> or <a href="/loaders/url-loader">url-loader</a>.</li> </ul> <h2 id="b">B<a href="#b" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <ul> <li><a href="/guides/getting-started/#creating-a-bundle"><strong>Bundle</strong></a>: Produced from a number of distinct modules, bundles contain the final versions of source files that have already undergone the loading and compilation process.</li> <li><a href="/guides/code-splitting"><strong>Bundle Splitting</strong></a>: This process offers one way of optimizing a build, allowing webpack to generate multiple bundles for a single application. As a result, each bundle can be isolated from changes effecting others, reducing the amount of code that needs to be republished and therefore re-downloaded by the client and taking advantage of browser caching.</li> </ul> <h2 id="c">C<a href="#c" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <ul> <li><strong>Chunk</strong>: This webpack-specific term is used internally to manage the bundling process. Bundles are composed out of chunks, of which there are several types (e.g. entry and child). Typically, <em>chunks</em> directly correspond with the output <em>bundles</em> however, there are some configurations that don\'t yield a one-to-one relationship.</li> <li><a href="/guides/code-splitting/"><strong>Code Splitting</strong></a>: Refers to dividing your code into various bundles/chunks which you can then load on demand instead of loading a single bundle containing everything.</li> <li><a href="/concepts/configuration/"><strong>Configuration</strong></a>: webpack configuration file is a plain old JavaScript file that exports an object. This object is then processed by webpack based upon its defined properties.</li> </ul> <h2 id="d">D<a href="#d" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <ul> <li><a href="/concepts/dependency-graph"><strong>Dependency Graph</strong></a>: Any time one file depends on another, webpack treats this as a <em>dependency</em>. Starting from an entry point(s), webpack recursively builds a dependency graph that includes every module/asset your application needs.</li> </ul> <h2 id="e">E<a href="#e" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <ul> <li><a href="/concepts/entry-points"><strong>Entry Point</strong></a>: The entry point tells webpack where to start and follows the graph of dependencies to know what to bundle. You can think of your application\'s entry point(s) as the <strong>contextual root(s)</strong> of what you want bundled.</li> </ul> <h2 id="h">H<a href="#h" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <ul> <li><a href="/concepts/hot-module-replacement"><strong>Hot Module Replacement (HMR)</strong></a>: A process that exchanges, adds, or removes <code>modules</code> while an application is running without a full page reload.</li> </ul> <h2 id="l">L<a href="#l" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <ul> <li><a href="/concepts/loaders"><strong>Loaders</strong></a>: Transformations that are applied on the source code of a module. They allow you to pre-process files as you <code>require()</code> or "load" them. Similar to a \'task-runner\'.</li> <li><a href="/guides/lazy-loading"><strong>Lazy Loading</strong></a>: A process of loading parts (chunks) of your application lazily. In other words loading them only when we really need them.</li> </ul> <h2 id="m">M<a href="#m" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <ul> <li><a href="/concepts/modules"><strong>Module</strong></a>: Discrete chunks of functionality that provide a smaller surface area than a full program. Well-written modules provide solid abstractions and encapsulation boundaries which make up a coherent design and clear purpose.</li> <li><a href="/concepts/module-resolution/"><strong>Module Resolution</strong></a>: A module can be required as a dependency from another module and a resolver is a library which helps in locating a module by its absolute path. Modules are searched for inside all directories specified in <code>resolve.modules</code>.</li> <li><a href="/concepts/manifest"><strong>Manifest</strong></a>: The runtime will use it to resolve and load modules once they\'ve been bundled and shipped to the browser.</li> </ul> <h2 id="o">O<a href="#o" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <ul> <li><a href="/concepts/output"><strong>Output</strong></a>: Option(s) specifying where to output the compiled files to disk. <blockquote> <p><em>Note, that while there can be multiple entry points, only one output configuration is specified.</em></p> </blockquote> </li> </ul> <h2 id="p">P<a href="#p" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <ul> <li><a href="/concepts/plugins"><strong>Plugin</strong></a>: A JavaScript object that has an <code>apply</code> property. This <code>apply</code> property is called by the webpack compiler, giving access to the entire compilation lifecycle. These packages will typically extend compilation functionality in one way or another.</li> </ul> <h2 id="r">R<a href="#r" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <ul> <li><a href="/guides/dependency-management/"><strong>Request</strong></a>: Refers to the expression in the require/import statement, e.g. <em>require("./template/" + name + ".ejs")</em>, the request is <em>"./template/" + name + ".ejs"</em>.</li> </ul> <h2 id="s">S<a href="#s" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <ul> <li><a href="/guides/scaffolding/"><strong>Scaffolding</strong></a>: This feature allows creating a webpack configuration by using customizable third-party initialization packages.</li> <li><a href="/guides/shimming/"><strong>Shimming</strong></a>: Not all JS files can be used directly with webpack. The file maybe in an unsupported module format, or not even in any module format. It is here where <code>shimming</code> comes into play.</li> </ul> <h2 id="t">T<a href="#t" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <ul> <li><a href="/configuration/target/"><strong>Target</strong></a>: User configured deployment target(s) <a href="/configuration/target/">listed here</a> to compile for a specific environment like the browser, NodeJS, or Electron.</li> <li><a href="/guides/tree-shaking/"><strong>Tree Shaking</strong></a>: Unused/Excess code elimination, or more precisely, live code importing. Compilers like webpack will accomplish this by analyzing the various kinds <code>import</code> statements and usage of the imported code to determine what parts of dependencies are actually being utilized, dropping parts of the "tree" that are not.</li> </ul> <h2 id="v">V<a href="#v" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <ul> <li><a href="/concepts/entry-points/#separate-app-and-vendor-entries"><strong>Vendor Entry Point</strong></a>: Create dependency graphs starting at both <code>app.js</code> and <code>vendors.js</code>. These graphs are completely separate and independent of each other to allow leverage of <code>CommonsChunkPlugin</code> and extract any vendor references from your app bundle into your vendor bundle. Helps achieve a common pattern in webpack known as <a href="/guides/caching/">long-term vendor-caching</a>.</li> </ul> <h2 id="w">W<a href="#w" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <ul> <li><a href="/"><strong>webpack</strong></a>: A highly configurable <a href="/concepts/modules">module</a> bundler for modern JavaScript applications.</li> </ul> <h1 id="vote">Vote<a href="#vote" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h1> <h1 id="license-1">License<a href="#license-1" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h1> <h2 id="webpack-1">webpack<a href="#webpack-1" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>webpack is <a href="https://github.com/webpack/webpack/blob/master/LICENSE">MIT licensed</a>.</p> <h2 id="webpack-logo-and-icon">webpack logo and icon<a href="#webpack-logo-and-icon" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>The webpack logo and icon are under a different license which can be found <a href="https://github.com/webpack/media">here</a>.</p> <h2 id="webpack-documentation">webpack documentation<a href="#webpack-documentation" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>The content on <a href="https://webpack.js.org/">https://webpack.js.org/</a> is available under <a href="https://creativecommons.org/licenses/by/4.0/">Creative Commons BY 4.0</a> license meaning attribution is required should you use the content elsewhere.</p> <h2 id="webpack-code-samples">webpack code samples<a href="#webpack-code-samples" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>The code samples use <a href="https://creativecommons.org/publicdomain/zero/1.0/">CC0 1.0 Universal (CC0 1.0) (Public Domain)</a> and you are free to use them as you like.</p> ';t.default=d},1370:function(a){"use strict";a.exports=function(a,t){return t||(t={}),a?(a=String(a.__esModule?a.default:a),t.hash&&(a+=t.hash),t.maybeNeedQuotes&&/[\t\n\f\r "'=<>`]/.test(a)?'"'.concat(a,'"'):a):a}}}]);